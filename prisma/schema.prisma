generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String
  provider    String
  provider_id String
  avatar      String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  phrases Phrase[] // Relation to Phrase
  folders Folder[] // Relation to Folder

  @@unique([provider, provider_id])
}

model Phrase {
  id            Int      @id @default(autoincrement())
  japanese      String // 일본어 원문
  romaji        String // 로마자 표기
  pronunciation String // 한글 발음
  translation   String // 한국어 번역
  writer        String   @default("test") // 등록자
  createdAt     DateTime @default(now()) // 등록 날짜
  updatedAt     DateTime @updatedAt // 업데이트 날짜
  description   String? // 문장 설명 (선택)

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model Link {
  id         Int      @id @default(autoincrement())
  title      String
  url        String
  imageUrl   String?
  tags       String[] @default([])
  isAlarm    Boolean  @default(false)
  isFavorite Boolean  @default(false)
  isRead     Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  memo       String?

  folderId Int
  folder   Folder @relation(fields: [folderId], references: [id])
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  links  Link[]
}
